buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
        springBootAdminVersion = '2.1.4'
        shadowVersion = '4.0.4'
        apacheCommonsCollections4Version = '4.3'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.github.jengelman.gradle.plugins:shadow:${shadowVersion}")
    }
}

allprojects {
    group = 'xyz.hyunto'
    version = '0.0.1-SNAPSHOT'
    buildDir = "${rootProject.projectDir}/build"

    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-configuration-processor'
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.springframework.boot:spring-boot-starter-integration'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
//        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.springframework.boot:spring-boot-starter-websocket'
//        implementation 'de.codecentric:spring-boot-admin-starter-client'
        implementation 'org.apache.kafka:kafka-streams'
        implementation 'org.flywaydb:flyway-core'
        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'org.springframework.retry:spring-retry'
        implementation 'org.springframework.session:spring-session-data-redis'
        implementation 'org.springframework.session:spring-session-jdbc'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
        testImplementation 'org.springframework.security:spring-security-test'

        implementation("org.apache.commons:commons-collections4:${apacheCommonsCollections4Version}")
    }

    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        }
    }


    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java", "src/generated/java"]
            }
            resources {
                srcDirs = ["src/main/resources"]
            }
        }
    }

    /**
     * Gradle Shadow Plug-in을 이용하여 빌드시 Executable Fat Jar 파일 생성
     */
    jar {
        finalizedBy shadowJar
        manifest {
            attributes 'Main-Class': 'xyz.hyunto.backend.core.BackendApplication'
        }
    }
    shadowJar {
        mergeServiceFiles('META-INF/spring.*')
        baseName = "${rootProject.project.name}"
        appendix = "all"
        version = "${rootProject.version}"
        classifier = null
    }
}